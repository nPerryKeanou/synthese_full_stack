1.  Définition simple :
    Un hook est un fonction spécial introduite pas React qui permet aux composants fonctionnels d'utiliser des
    fonctionnalités avancées comme l'état, le cycle de vie ou le context -- des choses qui avant étaient possibles seulement avec les classes.

    En gros, les hooks permettent de " brancher " (to hook into) les mécanismes internes de React.

2. Exemples de hooks intégrés :
    
    A. useState
        . Gérer un état local.
            const [count, setCount] = useState(0);

    B. useEffect
        . Exécute du code en réaction à un changement (effets de bord: apple API, timer, mise à jour du titre de la page,etc).
            useEffect(() => {
                console.log("Composant monté ou count changé");
            }, [count]);

    C. useContext
        . Accéder directement à un contexte sans passer de props à chaque niveau.
    D. useRef
        . Stocker une valeur persistante qui ne déclenche pas de re-render (par ex. accéder à un élément DOM, ou garder une valeur entre deux renders.)

3. Pourquoi React a créé les hooks ?
    Avant les hooks, on avait deux types de composants :
        . Composants fonctionnels: simple, mais limités (pas d'état ni de cycle de vie).
        . Composants de classe = puissants, mais plus lourds et parfois compliqués.

    Avec les hooks, un composant fonctionnel peut faire tout ce qu'une classe faisait, mais de manière plus simple et réutilisable.

4. Exemple cocnret
    class Compteur extends React.component{
        state = {count: 0};

        render(){
            return(
                <button onCLick=(() => this.setState({coint.state.count+1}))>
                {this.state.count}
                </button>
            );
        }
    }

    Avec les hooks useState -> fonctionnel : 

    const Compteur(){
        const [count, setCount] = useState(0);

        return(
            <button onClick={() => setCount(count + 1)}>
            {count}
            </button>
        );
    }

    Donc, un hook = une fonction qui donne à un composant fonctionnel des " superpouvoir ".